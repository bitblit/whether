{
  "name": "dyndb",
  "author": {
    "name": "Sergio Alcantara",
    "email": "iserg9@gmail.com",
    "url": "https://github.com/serg-io"
  },
  "description": "Small DynamoDB Node.js module",
  "version": "0.2.0",
  "homepage": "https://github.com/serg-io/dyndb",
  "keywords": [
    "dynamodb",
    "aws",
    "amazon"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/serg-io/dyndb.git"
  },
  "main": "dyndb.js",
  "dependencies": {
    "underscore": "1.4.4"
  },
  "readme": "DynDB\n=====\n\nSmall DynamoDB Node.js module\n\nInstallation\n------------\n\nExecute the following command at the root of your project:\n\n\tnpm install dyndb\n\nAWS Credentials\n---------------\n\nYou can set the credentials using any of the following methods:\n\n1.\tManually passing the credentials to the constructor:\n\t\n\t\tvar dyndb = new DynDB('accessKeyID', 'secretAccessKey', 'awsRegion');\n\n2.\tUsing the following environment variables and calling the constructor without any arguments:\n\t* `AWS_ACCESS_KEY_ID`\n\t* `AWS_SECRET_ACCESS_KEY`\n\t* `AWS_REGION`\n\n3.\tDynDB supports IAM Roles. To use IAM Role credentials [assign a role to the EC2](http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/UsingIAM.html#UsingIAMrolesWithAmazonEC2Instances) instance when you launch it.\n\tDynDB will automatically get the credentials from the [EC2 metadata service](http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html).\n\tDo not pass the `accessKeyID` and `secretAccessKey` to the constructor when using IAM Roles.\n\n\t\tvar dyndb = new DynDB(); // Default region: us-east-1\n\n\t\t// You can specify whatever region you need\n\t\tvar dyndb = new DynDB(null, null, 'us-west-1');\n\nUsage\n-----\n\n\tvar DynDB = require('dyndb');\n\n\t// Pass your AWS access keys and AWS region to the constructor or\n\t// make sure they're set in your environment variables\n\tvar dyndb = new DynDB('accessKeyID', 'secretAccessKey', 'awsRegion');\n\n\t// List tables\n\tdyndb.request('ListTables', function(error, json) {\n\t\tif (error) {\n\t\t\tconsole.error(error.message ? error.message : error);\n\t\t} else {\n\t\t\t// json: {TableNames: ['TableName1', 'TableName2', 'TableName3']}\n\t\t\tconsole.log(json);\n\t\t}\n\t});\n\n\t// Put Item\n\tvar body = {\n\t\tTableName: 'Books',\n\t\tItem: {\n\t\t\tisbn: {N: '9780641723445'},\n\t\t\tcat: {SS: ['book','hardcover']},\n\t\t\tname: {S: 'The Lightning Thief'},\n\t\t\tauthor: {S: 'Rick Riordan'},\n\t\t\tseries_t: {S: 'Percy Jackson and the Olympians'},\n\t\t\tsequence_i: {N: '1'},\n\t\t\tgenre_s: {S: 'fantasy'},\n\t\t\tinStock: {S: 'true'},\n\t\t\tprice: {N: '12.50'},\n\t\t\tpages_i: {N: '384'}\n\t\t}\n\t};\n\tdyndb.request('PutItem', body, function(error, json) {\n\t\tif (error) {\n\t\t\tconsole.error(error.message ? error.message : error);\n\t\t} else {\n\t\t\t// json: {ConsumedCapacityUnits: 1}\n\t\t\tconsole.log(json);\n\t\t}\n\t});\n\nAdditional Examples\n-------------------\n\nMore examples can be found in `tests/operations.js`\n\nAPI Docs\n--------\n\nConsult the [API Docs](http://serg-io.github.com/dyndb/) for detailed documentation about how to use DynDB\n\nDynamoDB Docs\n-------------\n\nConsult the [DynamoDB documentation](http://docs.amazonwebservices.com/amazondynamodb/latest/developerguide/operationlist.html) for details about all the available operations and the structure\nof their request bodies.\n\nReleased under the BSD License\n----------------------------------\n\n\tCopyright (c) 2012, Sergio Alcantara\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted\n\tprovided that the following conditions are met:\n\n\t\t* Redistributions of source code must retain the above copyright notice, this list of\n\t\t  conditions and the following disclaimer.\n\t\t* Redistributions in binary form must reproduce the above copyright notice, this list of\n\t\t  conditions and the following disclaimer in the documentation and/or other materials\n\t\t  provided with the distribution.\n\t\t* Neither the name of Sergio Alcantara nor the names of its contributors may be used to\n\t\t  endorse or promote products derived from this software without specific prior written\n\t\t  permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n\tIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\n\tAND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n\tCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\tCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\tSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\tTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\tOTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\tPOSSIBILITY OF SUCH DAMAGE.",
  "readmeFilename": "README.md",
  "_id": "dyndb@0.2.0",
  "dist": {
    "shasum": "04c12a7a3bfbc83888cda036dc10833d95d76170"
  },
  "_from": "dyndb@0.2.0",
  "_resolved": "https://registry.npmjs.org/dyndb/-/dyndb-0.2.0.tgz"
}
